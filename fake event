

-- fake connection


local fakeconnection = {}
fakeconnection.__index = fakeconnection

function fakeconnection:Disconnect()
	self.Callback,self.Connected = nil,false
end

function fakeconnection.new(callback)
	return setmetatable({Callback=callback,Connected=true},fakeconnection)
end

fakeconnection.disconnect = fakeconnection.Disconnect


-- fake event


local fakeevent = {Event={LatestArguments={},TimesFired=0,Connections={}}}
fakeevent.__index = fakeevent

function fakeevent:Fire(...)
	self.Event.LatestArguments,self.Event.TimesFired = {...},self.Event.TimesFired + 1
	for i, v in next, self.Event.Connections do
		if v.Callback then v.Callback(...) end
	end
end

function fakeevent.Event:Wait()
	local timesfired = self.TimesFired
	repeat wait() until timesfired ~= self.TimesFired
	return table.unpack(self.LatestArguments)
end

function fakeevent.Event:Connect(callback)
	local connection = fakeconnection.new(callback)
	table.insert(self.Connections,connection)
	return connection
end

fakeevent.fire,fakeevent.Event.wait,fakeevent.Event.connection = fakeevent.Fire,fakeevent.Event.Wait,fakeevent.Event.Connect

function fakeevent.new()
	return setmetatable({},fakeevent)
end

-- assign functions to _G.FakeEvent

setmetatable(_G.FakeEvent,fakeevent)
